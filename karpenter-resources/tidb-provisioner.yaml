apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: tidb-karpenter-tidb
spec:
  template:
    metadata:
      labels:
        NodePool: tidb-karpenter-tidb
        dedicated: tidb
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: [${cluster_tidb_instance_type}]
        - key: topology.kubernetes.io/zone
          operator: In
          values: ${azs}
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: tidb-karpenter-tidb
      taints:
        - key: dedicated
          effect: NoSchedule
          value: tidb
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 720h # 30 * 24h = 720h
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: tidb-karpenter-tidb
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: "${eks_cluster_id}-karpenter-node"
  subnetSelectorTerms:
    - tags:
        Name: "${eks_cluster_id}-private*"
  securityGroupSelectorTerms:
    - tags:
        Name: "${eks_cluster_id}-node*"
#   instanceStorePolicy: RAID0
  tags:
    KarpenerNodeClassName: "tidb-karpenter-tidb"
    NodeType: "tidb-eks-karpenter-tidb"